name: Build OTServ 8.0 (Windows x64, MinGW)

on:
  workflow_dispatch:
    inputs:
      repo_url:
        description: 'Repozytorium do sklonowania'
        required: true
        default: 'https://github.com/opentibia/server.git'
      ref:
        description: 'Gałąź/tag/commit (zostaw puste, żeby wziąć domyślną gałąź)'
        required: false
        default: ''

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Setup MSYS2 (MINGW64) + deps
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            git
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-make
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-sqlite3
            mingw-w64-x86_64-lua51

      - name: Clone OTServ source
        shell: msys2 {0}
        run: |
          if [ -n "${{ github.event.inputs.ref }}" ]; then
            git clone --depth 1 --branch "${{ github.event.inputs.ref }}" "${{ github.event.inputs.repo_url }}" source
          else
            git clone --depth 1 "${{ github.event.inputs.repo_url }}" source
          fi

      - name: Configure (CMake Release, MinGW, SQLite=ON)
        shell: msys2 {0}
        run: |
          cd source
          mkdir -p build
          cd build
          cmake .. -G "MinGW Makefiles" \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_STANDARD=11 -DCMAKE_CXX_STANDARD_REQUIRED=ON -DCMAKE_CXX_EXTENSIONS=OFF \
            -DSQLITE=ON

      - name: Build (mingw32-make)
        shell: msys2 {0}
        run: |
          cd source/build
          mingw32-make -j

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: otserv-exe
          path: |
            source/build/otserv.exe
            source/build/bin/otserv.exe
